{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleja\\\\OneDrive\\\\Escritorio\\\\ONE ORACLE\\\\Codigo\\\\Formacion React\\\\reactrouter\\\\src\\\\components\\\\ListPosts.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"../assets/css/componentes/card.css\";\nimport { buscar } from \"../api/api\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListPosts = _ref => {\n  _s();\n  let {\n    url\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    buscar(url, setPosts);\n  }, [url]);\n  //ese parametro del url es\n\n  //lo que hago es porcada objecto que se cargo en mi useState posts creo un article\n  // el metodo setPOpst lo envie por parametro y en la api se llena \n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts container\",\n    children: posts.map(post => {\n      const {\n        id,\n        title,\n        metadescription,\n        categoria\n      } = post;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/posts/${id}`,\n        className: `post__card post-card--${categoria}`,\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"post-card__title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-card__meta\",\n            children: metadescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 28\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(ListPosts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = ListPosts;\nexport default ListPosts;\nvar _c;\n$RefreshReg$(_c, \"ListPosts\");","map":{"version":3,"names":["useState","useEffect","buscar","Link","jsxDEV","_jsxDEV","ListPosts","_ref","_s","url","posts","setPosts","className","children","map","post","id","title","metadescription","categoria","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aleja/OneDrive/Escritorio/ONE ORACLE/Codigo/Formacion React/reactrouter/src/components/ListPosts.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\n\r\nimport \"../assets/css/componentes/card.css\"\r\nimport { buscar } from \"../api/api\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\n\r\n\r\nconst ListPosts = ({ url }) => {\r\n\r\n    const [posts, setPosts] = useState([])\r\n    \r\n    \r\n    useEffect(() => {\r\n        buscar(url, setPosts)\r\n       \r\n    }, [url])\r\n    //ese parametro del url es\r\n\r\n\r\n    //lo que hago es porcada objecto que se cargo en mi useState posts creo un article\r\n    // el metodo setPOpst lo envie por parametro y en la api se llena \r\n    return (\r\n        <section className=\"posts container\">\r\n\r\n            {\r\n                posts.map(post => {\r\n                    const { id, title, metadescription, categoria } = post;\r\n                    return <Link to={`/posts/${id}`} className={`post__card post-card--${categoria}`} key={id}>\r\n                        <article >\r\n                            <h3 className=\"post-card__title\">\r\n                                {title}\r\n                            </h3>\r\n                            <p className=\"post-card__meta\">{metadescription}</p>\r\n                        </article>\r\n                    </Link>\r\n                })\r\n            }\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ListPosts"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,oCAAoC;AAC3C,SAASC,MAAM,QAAQ,YAAY;AACnC,SAASC,IAAI,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKvC,MAAMC,SAAS,GAAGC,IAAA,IAAa;EAAAC,EAAA;EAAA,IAAZ;IAAEC;EAAI,CAAC,GAAAF,IAAA;EAEtB,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAGtCC,SAAS,CAAC,MAAM;IACZC,MAAM,CAACO,GAAG,EAAEE,QAAQ,CAAC;EAEzB,CAAC,EAAE,CAACF,GAAG,CAAC,CAAC;EACT;;EAGA;EACA;EACA,oBACIJ,OAAA;IAASO,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAG5BH,KAAK,CAACI,GAAG,CAACC,IAAI,IAAI;MACd,MAAM;QAAEC,EAAE;QAAEC,KAAK;QAAEC,eAAe;QAAEC;MAAU,CAAC,GAAGJ,IAAI;MACtD,oBAAOV,OAAA,CAACF,IAAI;QAACiB,EAAE,EAAG,UAASJ,EAAG,EAAE;QAACJ,SAAS,EAAG,yBAAwBO,SAAU,EAAE;QAAAN,QAAA,eAC7ER,OAAA;UAAAQ,QAAA,gBACIR,OAAA;YAAIO,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC3BI;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACL,eACLnB,OAAA;YAAGO,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAEK;UAAe;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC9C,GANyER,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAOlF;IACX,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGA;AAElB,CAAC;AAAAhB,EAAA,CAjCKF,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AAmCf,eAAeA,SAAS;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}