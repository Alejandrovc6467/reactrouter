{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleja\\\\OneDrive\\\\Escritorio\\\\ONE ORACLE\\\\Codigo\\\\Formacion React\\\\reactrouter\\\\src\\\\App.js\";\nimport './assets/css/base/base.css';\nimport './assets/css/componentes/card.css';\nimport Home from \"./pages/Home\";\nimport Sobre from \"./pages/Sobre\";\n\n//este import es vital para que funcione el react router y asi la SPA\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  /*\n    todo esto de aqui(este bloque que esta comentado) es de lo que se encarga el (react router)\n    se encarga de las rutas del sitio, este solo un ejemplo sencillo e ineficaz de como se haria manualmente\n    en este ejemplo si voy y escribo en el buscador de chorome  (http://localhost:3000/) el metodo router que hize retornaria mi pagina home,  claro para que funcione la funcion routerMia que cree se debe de llamar dentro del return solo esa funcion para que tenga sentido todo el cambio de paginas\n    pero si escribiera (http://localhost:3000/sobre) o algo diferente a sobre pues me retornaria mi pagina (sobre)\n    y de esta forma controlaria en cual direccion de pagina quisiera estar, pero como lo mencione, esto es una forma ineficaz para eso esta la libreria que nos ayudara en esto\n  \n  \n  \n    const location = window.location.pathname\n    \n    const routerMia = () => {\n      if(location === \"/\"){\n        return <Home />\n      }else{\n        return <Sobre />\n      }\n    }\n  \n    */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Home","Sobre","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aleja/OneDrive/Escritorio/ONE ORACLE/Codigo/Formacion React/reactrouter/src/App.js"],"sourcesContent":["import './assets/css/base/base.css';\nimport './assets/css/componentes/card.css'\nimport Home  from \"./pages/Home\"\nimport Sobre from \"./pages/Sobre\"\n\n\n//este import es vital para que funcione el react router y asi la SPA\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\"\n\n\nfunction App() {\n\n\n  \n/*\n  todo esto de aqui(este bloque que esta comentado) es de lo que se encarga el (react router)\n  se encarga de las rutas del sitio, este solo un ejemplo sencillo e ineficaz de como se haria manualmente\n  en este ejemplo si voy y escribo en el buscador de chorome  (http://localhost:3000/) el metodo router que hize retornaria mi pagina home,  claro para que funcione la funcion routerMia que cree se debe de llamar dentro del return solo esa funcion para que tenga sentido todo el cambio de paginas\n  pero si escribiera (http://localhost:3000/sobre) o algo diferente a sobre pues me retornaria mi pagina (sobre)\n  y de esta forma controlaria en cual direccion de pagina quisiera estar, pero como lo mencione, esto es una forma ineficaz para eso esta la libreria que nos ayudara en esto\n\n\n\n  const location = window.location.pathname\n  \n  const routerMia = () => {\n    if(location === \"/\"){\n      return <Home />\n    }else{\n      return <Sobre />\n    }\n  }\n\n  */\n\n\n  return (\n    <>\n\n     <Router>\n        <Routes>\n\n          <Route path='/' element={ <Home/> } />\n\n        </Routes>\n     </Router>\n     \n    </>\n  );\n\n\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,4BAA4B;AACnC,OAAO,mCAAmC;AAC1C,OAAOA,IAAI,MAAO,cAAc;AAChC,OAAOC,KAAK,MAAM,eAAe;;AAGjC;AACA,SAAQC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGvE,SAASC,GAAGA,CAAA,EAAG;EAIf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eAECJ,OAAA,CAACJ,MAAM;MAAAQ,QAAA,eACJJ,OAAA,CAACH,MAAM;QAAAO,QAAA,eAELJ,OAAA,CAACF,KAAK;UAACO,IAAI,EAAC,GAAG;UAACC,OAAO,eAAGN,OAAA,CAACP,IAAI;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAE/B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACH,iBAEP;AAIP;AAACC,EAAA,GAzCQR,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}